; OM File Header - Saved 2025/03/09 13:31:10
; (6.010003 :patc (om-make-point 33 284) (om-make-point 50 50) (om-make-point 563 310) "No documentation " 183 0 nil "2023/04/09 22:59:31")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "tutorial_36" (quote ((om-load-boxcomment "comment1112" (om-make-point 317 37) (quote "TUTORIAL 36 - OMLoop: accumulation (I)") "" (om-make-point 131 32) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:bold)) :mode (quote nil))) (om-load-boxwithed1 (quote box-with-win) "OMLOOP" (quote omloop) (quote ((om-load-inputfun (quote input-funbox) "aditional input" "OPLIST" nil))) (om-make-point 265 139) nil nil nil (list (om-load-boxcomment "comment" (om-make-point 16 19) (quote "E") "" (om-make-point 100 283) nil (om-make-color 0 0 0) (om-make-font "Helvetica" 10 :family "Helvetica" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote genfun) "collect" (quote listing) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "WHAT?" nil))) (om-make-point 73 302) (om-make-point 229 53) nil nil nil 3) (om-load-boxin "input0" 0 (om-make-point 149 49) "no documentation" nil nil nil) (om-load-boxcall (quote genfun) "OM*" (quote om*) (quote ((om-load-inputfun (quote input-funbox) "first input" "SELF" 0) (om-load-inputfun (quote input-funbox) "second input" "NUM" 0))) (om-make-point 229 164) (om-make-point 39 35) nil "l" nil 1) (om-load-boxcall (quote bastype) "aux1" (quote t) (quote nil) (om-make-point 181 166) (om-make-point 22 32) 1 "1" nil) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 83 92) (om-make-point 33 31) 1 "1" nil) (om-load-boxcall (quote genfun) "for" (quote forloop) (quote ((om-load-inputfun (quote input-funbox) "low val" "FROM" 0) (om-load-inputfun (quote input-funbox) "high val" "TO" 10))) (om-make-point 117 146) nil nil nil nil 1) (om-load-boxcall (quote genfun) "acum" (quote accumulator) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "ACCUM" nil) (om-load-inputfun (quote input-funbox) "no documentation" "INIT" nil) (om-load-inputfun (quote input-funbox) "no documentation" "FUN" nil))) (om-make-point 76 221) (om-make-point 227 53) nil nil nil 3) (om-load-seqbox "finally" (quote finaldo) (quote ((om-load-inputfun (quote input-funbox) "patch" "PATCH" nil))) (om-make-point 169 383) nil nil nil 0) (om-load-seqbox "eachTime" (quote loopdo) (quote ((om-load-inputfun (quote input-funbox) "patch" "PATCH" nil))) (om-make-point 103 383) nil nil nil 0)) (quote ((7 0 1 0 nil 0) (5 0 6 0 nil 0) (2 0 6 1 nil 0) (6 0 7 0 nil 0) (4 0 7 1 nil 0) (3 0 7 2 nil 0) (1 1 8 0 nil 0) (1 0 9 0 nil 0))) 1 "factorial_series" nil) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 290 98) (om-make-point 29 30) 5 "5" nil) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 175 97) (om-make-point 34 34) 5 "5" nil) (om-load-boxwithed1 (quote box-with-win) "OMLOOP" (quote omloop) (quote ((om-load-inputfun (quote input-funbox) "aditional input" "OPLIST" nil))) (om-make-point 171 136) nil nil nil (list (om-load-boxcomment "comment" (om-make-point 15 18) (quote "A") "" (om-make-point 88 207) nil (om-make-color 0 0 0) (om-make-font "Helvetica" 10 :family "Helvetica" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 17 19) (quote "B") "" (om-make-point 157 206) nil (om-make-color 0 0 0) (om-make-font "Helvetica" 10 :family "Helvetica" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 16 22) (quote "C") "" (om-make-point 219 205) nil (om-make-color 0 0 0) (om-make-font "Helvetica" 10 :family "Helvetica" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 18 19) (quote "D") "" (om-make-point 186 61) nil (om-make-color 0 0 0) (om-make-font "Helvetica" 10 :family "Helvetica" :style (quote (:plain)) :mode (quote nil))) (om-load-boxin "input0" 0 (om-make-point 149 49) "no documentation" nil nil nil) (om-load-boxcall (quote genfun) "OM*" (quote om*) (quote ((om-load-inputfun (quote input-funbox) "first input" "SELF" 0) (om-load-inputfun (quote input-funbox) "second input" "NUM" 0))) (om-make-point 229 164) (om-make-point 39 35) nil "l" nil 1) (om-load-boxcall (quote bastype) "aux1" (quote t) (quote nil) (om-make-point 184 165) (om-make-point 19 30) 1 "1" nil) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 90 92) (om-make-point 16 31) 1 "1" nil) (om-load-boxcall (quote genfun) "for" (quote forloop) (quote ((om-load-inputfun (quote input-funbox) "low val" "FROM" 0) (om-load-inputfun (quote input-funbox) "high val" "TO" 10))) (om-make-point 111 129) nil nil nil nil 1) (om-load-boxcall (quote genfun) "acum" (quote accumulator) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "ACCUM" nil) (om-load-inputfun (quote input-funbox) "no documentation" "INIT" nil) (om-load-inputfun (quote input-funbox) "no documentation" "FUN" nil))) (om-make-point 76 221) (om-make-point 227 53) nil nil nil 3) (om-load-seqbox "finally" (quote finaldo) (quote ((om-load-inputfun (quote input-funbox) "patch" "PATCH" nil))) (om-make-point 172 298) nil nil nil 0) (om-load-seqbox "eachTime" (quote loopdo) (quote ((om-load-inputfun (quote input-funbox) "patch" "PATCH" nil))) (om-make-point 106 299) nil nil nil 0)) (quote ((7 0 8 0 nil 0) (4 0 8 1 nil 0) (8 0 9 0 nil 0) (6 0 9 1 nil 0) (5 0 9 2 nil 0) (9 1 10 0 nil 0) (9 0 11 0 nil 0))) 1 "factorial" nil))) (quote ((2 0 1 0 nil 0) (3 0 4 0 nil 0))) nil 6.010003))

; OM File Header - Saved 2023/04/09 18:12:58
; (6.050101 :patc (om-make-point 82 42) (om-make-point 50 50) (om-make-point 513 590) "No documentation " 183 0 nil nil)
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "treereverse" (quote ((om-load-boxcall (quote patch-box) "treereverse" (quote ("elements" "tutorial patches" "tutorial_39" "treereverse")) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "tree" nil))) (om-make-point 209 121) nil nil "l" nil 1) (om-load-boxcall (quote lispfun) "SECOND" (quote second) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 284 133) nil nil nil nil 1) (om-load-boxcall (quote lispfun) "MAPCAR" (quote mapcar) (quote ((om-load-inputfun (quote input-funbox) "FUNCTION" "FUNCTION" nil) (om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 242 206) (om-make-point 90 37) nil nil "mapcar" 1) (om-load-boxcall (quote lispfun) "LIST" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 192 325) (om-make-point 98 37) nil nil nil 1) (om-load-boxcall (quote lispfun) "REVERSE" (quote reverse) (quote ((om-load-inputfun (quote input-funbox) "SEQUENCE" "SEQUENCE" nil))) (om-make-point 261 267) (om-make-point 47 37) nil nil nil 1) (om-load-boxcall (quote lispfun) "FIRST" (quote first) (quote ((om-load-inputfun (quote input-funbox) "LIST" "LIST" nil))) (om-make-point 185 265) nil nil nil nil 1) (om-load-boxcall (quote genfun) "OMIF" (quote omif) (quote ((om-load-inputfun (quote input-funbox) "if" "TEST" nil) (om-load-inputfun (quote input-funbox) "then" "ACTION" nil) (om-load-inputfun (quote input-funbox) "else" "ELSE" nil))) (om-make-point 49 390) (om-make-point 164 53) nil nil nil 1) (om-load-boxcall (quote lispfun) "ATOM" (quote atom) (quote ((om-load-inputfun (quote input-funbox) "DATA-OBJECT" "DATA-OBJECT" nil))) (om-make-point 78 133) nil nil nil "atom" 1) (om-load-boxout "output" 0 (om-make-point 109 471) (quote ((om-load-inputfun (quote input-funbox) "out" "out" nil))) nil nil) (om-load-boxin "input" 0 (om-make-point 121 45) "no documentation" "tree" nil nil))) (quote ((9 0 1 0 nil 0) (0 0 2 0 nil 0) (1 0 2 1 nil 0) (5 0 3 0 nil 0) (4 0 3 1 nil 0) (2 0 4 0 nil 0) (9 0 5 0 nil 0) (7 0 6 0 nil 0) (9 0 6 1 nil 0) (3 0 6 2 nil 0) (9 0 7 0 nil 0) (6 0 8 0 nil 0))) nil 6.010003))

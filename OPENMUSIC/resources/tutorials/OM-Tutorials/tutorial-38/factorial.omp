; OM File Header - Saved 2023/04/09 18:12:58
; (6.010003 :patc (om-make-point 99 61) (om-make-point 50 50) (om-make-point 457 507) "No documentation " 183 0 nil "2023/04/09 18:12:58")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "factorial" (quote ((om-load-boxcall (quote patch-box) "factorial1" (quote ("elements" "tutorial patches" "tutorial_38" "factorial")) (quote ((om-load-inputfun (quote input-funbox) "no documentation" "n" nil))) (om-make-point 272 164) nil nil nil nil 1) (om-load-boxcomment "comment" (om-make-point 15 18) (quote "A") "" (om-make-point 36 256) nil (om-make-color 0 0 0) (om-make-font "Helvetica" 10 :family "Helvetica" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 17 19) (quote "B") "" (om-make-point 147 255) nil (om-make-color 0 0 0) (om-make-font "Helvetica" 10 :family "Helvetica" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 25 32) (quote "C") "" (om-make-point 240 255) nil (om-make-color 0 0 0) (om-make-font "Helvetica" 10 :family "Helvetica" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcomment "comment" (om-make-point 18 19) (quote "D") "" (om-make-point 253 115) nil (om-make-color 0 0 0) (om-make-font "Helvetica" 10 :family "Helvetica" :style (quote (:plain)) :mode (quote nil))) (om-load-boxcall (quote bastype) "aux2" (quote t) (quote nil) (om-make-point 314 63) (om-make-point 21 30) 1 "1" nil) (om-load-boxcall (quote genfun) "OM-" (quote om-) (quote ((om-load-inputfun (quote input-funbox) "first input" "SELF" 0) (om-load-inputfun (quote input-funbox) "second input" "NUM" 0))) (om-make-point 294 94) nil nil nil nil 1) (om-load-boxcall (quote genfun) "OM*" (quote om*) (quote ((om-load-inputfun (quote input-funbox) "first input" "SELF" 0) (om-load-inputfun (quote input-funbox) "second input" "NUM" 0))) (om-make-point 217 246) nil nil nil nil 1) (om-load-boxcall (quote bastype) "aux1" (quote t) (quote nil) (om-make-point 169 259) (om-make-point 27 27) 1 "1" nil) (om-load-boxcall (quote genfun) "OMIF" (quote omif) (quote ((om-load-inputfun (quote input-funbox) "if" "TEST" nil) (om-load-inputfun (quote input-funbox) "then" "ACTION" nil) (om-load-inputfun (quote input-funbox) "else" "ELSE" nil))) (om-make-point 135 295) (om-make-point 91 53) nil nil nil 1) (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 126 212) (om-make-point 20 32) 0 "0" nil) (om-load-boxcall (quote genfun) "OM=" (quote om=) (quote ((om-load-inputfun (quote input-funbox) "a number" "SELF" 0) (om-load-inputfun (quote input-funbox) "a number" "NUM" 0))) (om-make-point 98 246) (om-make-point 33 35) nil nil nil 1) (om-load-boxin "input" 0 (om-make-point 165 25) "no documentation" "n" nil nil) (om-load-boxout "output" 0 (om-make-point 161 367) (quote ((om-load-inputfun (quote input-funbox) "out" "out" nil))) nil nil))) (quote ((6 0 0 0 nil 0) (12 0 6 0 nil 0) (5 0 6 1 nil 0) (12 0 7 0 nil 0) (0 0 7 1 nil 0) (11 0 9 0 nil 0) (8 0 9 1 nil 0) (7 0 9 2 nil 0) (12 0 11 0 nil 0) (10 0 11 1 nil 0) (9 0 13 0 nil 0))) nil 6.010003))
